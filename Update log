--------------------分割线----------------------

2018-12-19

Assertion error:因为有弹窗报错之后无法定位到断言语句

--------------------分割线----------------------

2018-12-15

1、捕获超时异常？
2、headless模式下，脚本运行时长都要超过12s，太慢了
3、设置隐性等待时间，以节约跑的时间  =》 个人觉得还是WebDriverWait()比较好，根据载入的元素动态判断

--------------------分割线----------------------

2018-12-14

1、新增了master_assertion分支
    2、如果是必填，抛出必填的失败信息
    ⭐️(O_O)? 3、如果是alert：https://www.cnblogs.com/qiaoyeye/p/5593428.html

--------------------分割线----------------------

2018-12-13

>>>有点陷入死胡同，现阶段需要做的应该是把基本功能走通，size的大小可以放到后期进行优化
        1、断言的自检？
        [done]2、删掉compress分支

--------------------分割线----------------------

2018-12-12

>>> 下一步想做的：1、现阶段截图size很大，能否压缩一下
                2、本地保存截图时能新建一个文件夹
                3、新优化的时候切分支出来

--------------------分割线----------------------

2018-12-11

>>>通过back_end.add_argument()设定浏览器窗口

--------------------分割线----------------------

2018-12-10

>>> 1、网上download了一段后台运行代码作为原型，记入backgroundtest.py
    2、后台运行代码整合到了现有代码，居然还可以进行截图，不过图片尺寸固定是1600x1200，需要调整一下
    3、pyvirtualdisplay有点问题，一直提示“FileNotFoundError: [Errno 2] No such file or directory: 'Xvfb': 'Xvfb'”

--------------------分割线----------------------

2018-12-07

添加断言：判断点击申请试用按钮之后页面的提醒文字 - 基于status来发送邮件，只有失败的时候才会触发邮件

⭐️(O_O)? 通过randomchoice函数自动生成数字后，设置了等待一秒钟：不知道是不是因为机器生成随机数字需要时间，导致数字没有来的及传递？

>>>下一步想做的：1、学习后台运行 -->
                    ```headless属性 后台静默运行：【但是如果执行失败，如何将错误信息提取出来？】
                    ```通过使用pyvirtualdisplay,创建虚拟屏幕,将浏览器运行在这个虚拟的屏幕之中

               2、log?

--------------------分割线----------------------

2018-12-06

⭐️(O_O)? 尝试把“测试邮件内容”单独拎出来作为一个函数，将此函数返回的邮件正文传入“发送邮件”的函数中：但是一直报错TypeError: 'str' object is not callable；怀疑是因为邮件内容传输过程中的编码问题导致？

提交申请试用成功的提示：

xpath:
/html/body/div/div/div/div[2]/div/div/text()

selector:
body > div > div > div > div.request-form > div > div

error_message = qd.find_element_by_xpath("/html/body/div/div/div/div[2]/div/div").text

--------------------分割线----------------------

2018-12-04

Advice：1、封装函数，并分成若干模块（后期直接import即可）
        2、定义函数参数，后期跑脚本时直接传参即可（定位元素用变量） -  尽量提取成公共的方法
        3、后期的定时脚本，一个脚本对应一个test case

Attention： 1、截图路径问题 - 初始化为通用的文件夹（desktop）：先在桌面创建一个文件夹，把路径指向该文件夹  import os
            2、封装函数后“sendresultemail”的encoder、str() object is not callable

--------------------分割线----------------------

2018-11-22

>>>今儿达成的主要功能：
    1、截图保存至代码文件夹
    2、特定的截图作为邮件中附件
    3、优化了邮件格式，可以填充邮件变量

--------------------分割线----------------------
2018-11-21

>>>今儿达成的主要功能：
    1、自动填写表单
    2、填毕截图
    3、自动触发邮件

>>>下一步想做的事情：
    1、截图能截全屏幕（PhantomJs？JavaScript？）
    *2、自动触发邮件优化 - 正文内容优化 + 带上截图
    3、函数的封装，不要成为一个又一个操作步骤的堆积
    4、完善HT版的情况
    【done】*5、附件的安置：除了放在本地
    *6、测试结果的断言：执行完截图并不是一个最终的状态，还需要人工进行判断 - 如果再往前一步，让机器去判断？
    7、自动生成测试报告进行记录（亦可带入邮件 - MIMEText？）
    8、自动运行（？）
    *9、无界面的后台运行

>>>对于扩大范围：
    1、门户应聘、登录/注册
    2、基本的标准产品的流程性覆盖

--------------------分割线----------------------